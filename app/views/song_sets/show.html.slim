.pull-right.page-buttons
  = link_to "Add Songs", songs_path(add_to_set: @song_set.id), class: 'btn'
  = link_to "Edit Set", edit_song_set_path(@song_set), class: 'btn'

h3.page-title
  = @song_set.name
  small.hidden-phone Performance Date: #{@song_set.play_on.to_s} (#{last_played_in_words(@song_set.play_on)})
  small.visible-phone= @song_set.play_on.to_s

.metro-list{data-update-url=sort_song_sets_songs_path}
  h4.metro-list-section-header *{:class => ["#{@color}-secondary"]}
    | Songs in Set
  - if @song_set.song_sets_songs.empty?
    .center No Songs In Set. Add some by clicking "Add Songs" above.
  - @song_set.song_sets_songs.set_order.each do |song_sets_song|
    - song = song_sets_song.song
    = content_tag_for :div, song_sets_song, class:"#{@color} metro-list-item" do
      .row-fluid
        .pull-right.metro-list-item-attachments
          = link_to song_sets_song_path(song_sets_song),
            class: 'js', method: :delete do
            i.icon-remove *{:class => ["#{@color}-secondary"]}
        .span4.metro-list-item-title= song.name
        .span3.metro-list-item-info
          .labeled-item.subdued
            | Lead By
            span= song_sets_song.lead_by

.form-buttons.clear
  = form_for(@song_set, html: {class: 'inline pull-right'}) do |f|
    = f.hidden_field :published, value: !@song_set.published?
    = f.submit @song_set.published? ? "Unpublish" : "Publish",  class: 'btn btn-success'
    = submit_tag nil, class: 'hidden-submit'
  = link_to "Delete Set", song_set_path(@song_set), method: :delete, class: 'pull-right btn-link btn-link-red js', confirm: "Are you sure?"

div.clearfix
- content_for :load_last do
  = javascript_include_tag 'sets'
